[1mdiff --git a/src/Todoapp.jsx b/src/Todoapp.jsx[m
[1mindex d0bb81d..6734c32 100644[m
[1m--- a/src/Todoapp.jsx[m
[1m+++ b/src/Todoapp.jsx[m
[36m@@ -1,4 +1,4 @@[m
[31m-import React, { useState } from 'react';[m
[32m+[m[32mimport React from 'react';[m
 import './todo.css'[m
 import Todo from './todoEntry';[m
 import {FaSearch, FaCog, FaAngleDown, FaAngleUp} from 'react-icons/fa';[m
[36m@@ -7,79 +7,37 @@[m [mimport useTodo from './useTodo';[m
 [m
 function Todoapp() {[m
 [m
[31m-    const {styleColors, baseThemeColor, todoList, sortTypes, activeSortType, sortBox, todoRender, inputRef, todoRenderRef, alert, date, time, alarmTime, editing, footerBtns, searchFound, sortUlRef, effectChange, settingsBtn, openSettings, setOpenSettings, setSortBox, todoToolsControls, todoAlarmControls, sortTodoControls, themeHandler, todoTagRef, alarmConsolesRef} = useTodo();[m
[32m+[m[32m    const {styleColors, baseThemeColor, todoList, sortTypes, activeSortType, sortBox, todoRender, inputRef, todoRenderRef, alert, date, time, alarmTime, editing, footerBtns, searchFound, sortUlRef, effectChange, settingsBtn, openSettings, setOpenSettings, setSortBox, todoToolsControls, todoAlarmControls, sortTodoControls, themeHandler} = useTodo();[m
 [m
     const {addTodo, toggleCheck, editTodo, deleteTodo, changeRange, emptyAll, activeTodos, deleteComp, initSearch} = todoToolsControls()[m
 [m
[31m-    const {changeThemeColor, handleColorChange, inputHover, inputFocus, sortBoxMouseOut, addBtnHover} = themeHandler()[m
[32m+[m[32m    const {changeThemeColor, handleColorChange, inputHoverStyle, inputFocusStyle, mouseOut, sortBoxMouseOut, addBtnHover, rmAddBtnHover} = themeHandler()[m
     [m
     const {persistSortBox, hideSortBox, chooseSortType} = sortTodoControls();[m
     [m
[31m-    const {changeAlarmTime, saveTodoAlarm, toggleAlarmBox, handleExpiredAlarm} = todoAlarmControls()[m
[32m+[m[32m    const {changeAlarmTime, saveTodoAlarm, toggleAlarmBox, addressExpiredAlarm} = todoAlarmControls()[m
 [m
     const searchEntrance = todoList.length > 4;[m
 [m
[31m-    const mobileScreen = window.innerWidth < 650;[m
[31m-[m
[31m-    const [extendSearch, setExtendSearch] = useState(mobileScreen ? false : true)[m
[31m-    const [alarmBoxOpen, setAlarmBoxOpen] = useState(false)[m
[31m-[m
[31m-    const removeAlarmBox = (type) => {[m
[31m-        if(alarmBoxOpen) {[m
[31m-            toggleAlarmBox (type);[m
[31m-            setAlarmBoxOpen(false);[m
[31m-        }[m
[31m-        return;[m
[31m-    }[m
[31m-[m
[31m-    const handleExtendSearch = () => {[m
[31m-        setExtendSearch(prev => !prev)[m
[31m-    }[m
[31m-[m
     return ([m
[31m-        <main [m
[31m-            className ='container' [m
[31m-            style={{background: styleColors.contbcg, borderRight: `1px inset ${styleColors.lightcolor}`, borderLeft: `1px inset ${styleColors.inputbordercolor}`}}[m
[31m-        >[m
[32m+[m[32m        <main className ='container' style={{background: styleColors.contbcg, borderRight: `1px inset ${styleColors.lightcolor}`, borderLeft: `1px inset ${styleColors.inputbordercolor}`}}>[m
                 {openSettings && <section className='settings_bcg'>[m
                     <div className='settings_box' style = {{borderBottom: `1px solid ${styleColors.inputbordercolor}`}}>[m
                         <div className='theme'>[m
                             <label className='colorchange_label' htmlFor='color'> Change Theme Color</label>[m
                             <div className='color_change'>[m
                                 <button className = 'color_box'>[m
[31m-                                    <input [m
[31m-                                        type="color" [m
[31m-                                        id='color' [m
[31m-                                        value ={baseThemeColor} [m
[31m-                                        onChange = {handleColorChange}[m
[31m-                                    />[m
[32m+[m[32m                                    <input type="color" id='color' value ={baseThemeColor} onChange = {handleColorChange}/>[m
                                 </button>[m
[31m-                                {effectChange && <button [m
[31m-                                    type='button' [m
[31m-                                    onClick ={changeThemeColor}[m
[31m-                                    className='changecolor_btn'[m
[31m-                                >[m
[31m-                                    Change[m
[31m-                                </button>}[m
[32m+[m[32m                                {effectChange && <button type='button' onClick ={changeThemeColor}className='changecolor_btn'>Change</button>}[m
                             </div>[m
                         </div>[m
                     </div>[m
                 </section>}[m
[31m-            <section [m
[31m-                className="heading" [m
[31m-                onMouseOver={()=> removeAlarmBox ('close')} [m
[31m-                style = {{background: `linear-gradient(to left, ${styleColors.midcolor}, ${styleColors.midcolorgradient}`}}[m
[31m-            >[m
[32m+[m[32m            <section className="heading" onMouseOver={(e)=> toggleAlarmBox (e, 'close')} style = {{background: `linear-gradient(to left, ${styleColors.midcolor}, ${styleColors.midcolorgradient}`}}>[m
                 <div className='header_content'>[m
                     <h3>Todo Application</h3>[m
[31m-                    <button [m
[31m-                        type = 'button' [m
[31m-                        className='settings_btn' [m
[31m-                        ref = {settingsBtn} [m
[31m-                        onClick = {()=> setOpenSettings(!openSettings)}[m
[31m-                    >[m
[31m-                        <FaCog/>[m
[31m-                    </button>[m
[32m+[m[32m                    <button type = 'button' className='settings_btn' ref = {settingsBtn} onClick = {()=> setOpenSettings(!openSettings)}><FaCog/></button>[m
                 </div>[m
             </section>[m
             <section className='time_date'>[m
[36m@@ -88,128 +46,44 @@[m [mfunction Todoapp() {[m
             </section>[m
 [m
             <div className='content_box' onMouseOver={()=> setOpenSettings(false)}>[m
[31m-                <h2 [m
[31m-                    className='note' [m
[31m-                    onMouseOver={(e)=> {[m
[31m-                    hideSortBox(e);[m
[31m-                    removeAlarmBox('close')}[m
[31m-                }> [m
[31m-                    {todoList.length > 0 ? `* You have ${activeTodos.length} (of ${todoList.length}) todos to complete`: 'Your todo list is empty'}[m
[31m-                </h2>[m
[31m-                <p className = {`alert ${alert.display && 'show'} alert_${alert.comment}`}> [m
[31m-                    {alert.msg || 'comment'} [m
[31m-                </p>[m
[31m-                [m
[31m-                <div [m
[31m-                    className= {`input_forms ${searchEntrance && 'realign'}`} [m
[31m-                    onMouseOver={(e)=> {[m
[31m-                    hideSortBox(e);[m
[31m-                    removeAlarmBox('close')}[m
[32m+[m[32m                <h2 className='note' onMouseOver={(e)=> {[m
[32m+[m[32m                    hideSortBox;[m
[32m+[m[32m                    toggleAlarmBox (e, 'close')}[m
[32m+[m[32m                }> {todoList.length > 0 ? `* You have ${activeTodos.length} todos to complete on your list of ${todoList.length}`: 'Your todo list is empty'}</h2>[m
[32m+[m[32m                <p className = {`alert ${alert.display && 'show'} alert_${alert.comment}`}> {alert.msg || 'comment'} </p>[m
[32m+[m[32m                <div className= {`input_forms ${searchEntrance && 'realign'}`} onMouseOver={(e)=> {[m
[32m+[m[32m                    hideSortBox;[m
[32m+[m[32m                    toggleAlarmBox (e, 'close')}[m
                 }>[m
                     <form className='todo_adding'>[m
[31m-                        <input [m
[31m-                            type= 'text' [m
[31m-                            autoFocus='on' [m
[31m-                            placeholder ='Enter a todo' [m
[31m-                            ref ={inputRef} [m
[31m-                            onMouseOver= {(e) => inputHover(e, "mouse-in")} [m
[31m-                            onMouseLeave = {(e) => inputHover(e, "mouse-out")} [m
[31m-                            onMouseDown= {inputFocus} [m
[31m-                            className={`add_input ${alert.comment === 'fail' && 'error'}`}[m
[31m-                        />[m
[31m-                        <button [m
[31m-                            type='submit' [m
[31m-                            className= "add_btn" [m
[31m-                            style = {{background: styleColors.faintcolor}} [m
[31m-                            onClick ={addTodo}[m
[31m-                            onMouseOver = {(e) => addBtnHover(e, 'mouse-in')} [m
[31m-                            onMouseOut={(e) => addBtnHover(e, 'mouse-out')} [m
[31m-                        >[m
[31m-                            {editing.status ? 'Edit' : 'Add'}[m
[31m-                        </button>[m
[32m+[m[32m                        <input type= 'text' autoFocus='on' placeholder ='Enter a todo item' ref ={inputRef} onMouseOver= {inputHoverStyle} onMouseDown= {inputFocusStyle} onMouseLeave = {mouseOut} className={`add_input ${alert.comment === 'fail' && 'error'}`}/>[m
[32m+[m[32m                        <button type='submit' className= "add_btn" style = {{background: styleColors.faintcolor}} onMouseOver = {addBtnHover} onMouseOut= {rmAddBtnHover} onClick ={addTodo}>{editing.status ? 'Edit' : 'Add todo'}</button>[m
                     </form>[m
                     [m
[31m-                    <button [m
[31m-                        className= {`input_box ${searchEntrance && 'input_active'} ${extendSearch && 'input_box-extend'}`} [m
[31m-                        onMouseOver={()=> removeAlarmBox('close')}[m
[31m-                    >[m
[31m-                        <input [m
[31m-                            type='text' [m
[31m-                            placeholder={`Search`} [m
[31m-                            onChange={initSearch} [m
[31m-                            onClick={initSearch} [m
[31m-                            onMouseOver= {(e) => inputHover(e, "mouse-in")} [m
[31m-                            onMouseDown = {inputFocus} [m
[31m-                            onMouseOut= {(e) => inputHover(e, "mouse-out")} [m
[31m-                            className= {`search_input`}[m
[31m-                        />[m
[31m-                        <span [m
[31m-                            className='search_icon' [m
[31m-                            style ={{color: styleColors.opacitycolor}} onClick={handleExtendSearch}[m
[31m-                        >[m
[31m-                            <FaSearch/>[m
[31m-                        </span>[m
[32m+[m[41m                    [m
[32m+[m[32m                    <button className= {`input_box ${searchEntrance && 'input_active'}`}onMouseOver={(e)=> toggleAlarmBox (e, 'close')}>[m
[32m+[m[32m                        <input type='text' placeholder= {`Search todo`} onChange={initSearch} onClick={initSearch} onMouseOver= {inputHoverStyle} onMouseDown = {inputFocusStyle} onMouseOut= {mouseOut} className= {`search_input`}/>[m
[32m+[m[32m                    <span className='search_icon' style = {{color: styleColors.opacitycolor}}><FaSearch/></span>[m
                     </button>[m
                 </div>[m
 [m
[31m-                {todoList.length > 3 && <div [m
[31m-                    className={ footerBtns ? "sortings" : "sortings sortings--noshow"} [m
[31m-                    onMouseOver={()=> removeAlarmBox('close')}[m
[31m-                > [m
[32m+[m[32m                {todoList.length > 3 && <div className={ footerBtns ? "sortings" : "sortings sortings--noshow"} onMouseOver={(e)=> toggleAlarmBox (e, 'close')}>[m[41m [m
                     <span onMouseOver={hideSortBox}> sort by : </span>[m
[31m-                    <button [m
[31m-                        onClick ={()=>setSortBox(!sortBox)} [m
[31m-                        type = 'button' [m
[31m-                        className='sort_type' [m
[31m-                        style={{color: styleColors.opacitycolor}} [m
[31m-                        onMouseOver= {(e) => inputHover(e, "mouse-in")} [m
[31m-                        onMouseOut= {(e) => inputHover(e, "mouse-out")} [m
[31m-                        onMouseDown= {inputFocus}[m
[31m-                    >[m
[31m-                        {activeSortType}[m
[31m-                        {sortBox ? <FaAngleDown/> : <FaAngleUp/>}[m
[31m-                    </button>[m
[32m+[m[32m                    <button onClick ={()=>setSortBox(!sortBox)} type = 'button' className='sort_type' style={{color: styleColors.opacitycolor}} onMouseOver= {inputHoverStyle} onMouseOut= {mouseOut} onMouseDown= {inputFocusStyle}>{activeSortType}{sortBox ? <FaAngleDown/> : <FaAngleUp/>}</button>[m
                     [m
                     <ul className= {`sort_box ${sortBox && 'sorting_active'}`}[m
                     style={{borderTop: `1px solid ${styleColors.opacitycolor}`,borderBottom: `1px solid ${styleColors.opacitycolor}`}} onMouseOver={persistSortBox} ref={sortUlRef}>[m
                     {sortTypes.map((sort, index)=> {[m
[31m-                        return <li [m
[31m-                            key = {index} [m
[31m-                            style = {{borderBottom: `1px solid ${styleColors.opacitycolor}`, [m
[31m-                            borderLeft: sort === activeSortType ? [m
[31m-                            `3px solid ${styleColors.midcolor}` : 'transparent'}}[m
[31m-                            >[m
[31m-                            <button [m
[31m-                                type = 'button' [m
[31m-                                onClick={(e)=> chooseSortType(e, sort)} [m
[31m-                                className={`sort_type ${sort === 'Time added' && 'curr_sortType'}`} [m
[31m-                                style={{color: sort === 'Time added' ? styleColors.sorttypehov : 'grey'}} [m
[31m-                                onMouseOver= {(e) => inputHover(e, "mouse-in")} [m
[31m-                                onMouseOut= {sortBoxMouseOut} [m
[31m-                                onMouseDown= {inputFocus}[m
[31m-                            >[m
[31m-                                {sort}[m
[31m-                            </button>[m
[32m+[m[32m                        return <li key = {index} style = {{borderBottom: `1px solid ${styleColors.opacitycolor}`,borderLeft: sort === 'Time added' ? '2px solid rgba(141, 24, 139, 0.7)' : 'transparent'}}>[m
[32m+[m[32m                            <button type = 'button' onClick={(e)=> chooseSortType(e, sort)} className={`sort_type ${sort === 'Time added' && 'curr_sortType'}`} style={{color: sort === 'Time added' ? styleColors.sorttypehov : 'grey'}} onMouseOver= {inputHoverStyle} onMouseOut= {sortBoxMouseOut} onMouseDown= {inputFocusStyle}>{sort}</button>[m
                         </li>[m
                     })}[m
                     </ul>[m
                 </div>}[m
[31m-                <section [m
[31m-                    className={`${todoRender.length > 0 ? 'todo_list todo_pad': 'todo_list'}`} [m
[31m-                    style = {{borderRight: `2px inset ${styleColors.lightcolor}`, borderLeft: `2px inset ${styleColors.opacitycolor}`}} [m
[31m-                    onMouseOver={hideSortBox} [m
[31m-                    ref={todoRenderRef}[m
[31m-                >[m
[31m-                    {todoRender && todoRender.map((todo, index) => {[m
[32m+[m[32m                <section className={`${todoRender.length > 0 ? 'todo_list todo_pad': 'todo_list'}`} style = {{borderRight: `2px inset ${styleColors.lightcolor}`, borderLeft: `2px inset ${styleColors.opacitycolor}`}} onMouseOver={hideSortBox} ref={todoRenderRef}>[m
[32m+[m[32m                    {todoRender && todoRender.map((todo) => {[m
                         return <div key={todo.id}>[m
[31m-                            <Todo [m
[31m-                                key = {todo.id} [m
[31m-                                todo ={{...todo, index}} [m
[31m-                                toggleCheck ={toggleCheck} [m
[31m-                                deleteTodo ={deleteTodo} [m
[31m-                                editTodo ={editTodo} [m
[31m-                                changeRange={changeRange} toggleAlarmBox = {toggleAlarmBox} saveTodoAlarm = {saveTodoAlarm} changeAlarmTime ={changeAlarmTime} alarmTime= {alarmTime} handleExpiredAlarm = {handleExpiredAlarm} [m
[31m-                                todoTagRef={todoTagRef} alarmConsolesRef={alarmConsolesRef} alarmBoxOpen={alarmBoxOpen} setAlarmBoxOpen={setAlarmBoxOpen} removeAlarmBox={removeAlarmBox}/>[m
[32m+[m[32m                            <Todo key = {todo.id} todo ={todo} toggleCheck ={toggleCheck} deleteTodo ={deleteTodo} editTodo ={editTodo} changeRange={changeRange} toggleAlarmBox = {toggleAlarmBox} saveTodoAlarm = {saveTodoAlarm} changeAlarmTime ={changeAlarmTime} alarmTime= {alarmTime} addressExpiredAlarm= {addressExpiredAlarm}/>[m
                         </div>[m
                     })}[m
                 </section>[m
[36m@@ -217,26 +91,8 @@[m [mfunction Todoapp() {[m
                 <footer>[m
                     {footerBtns &&[m
                     <div className= {`wrapper ${todoList.length - activeTodos.length > 0 && 'wrapper_align'}`}>[m
[31m-                        <button [m
[31m-                            className={`dltcomp_btn ${todoList.length - activeTodos.length > 0 && 'visible'}`} [m
[31m-                            style={{background: styleColors.faintcolor}} [m
[31m-                            onClick ={deleteComp} [m
[31m-                            onMouseOver= {(e) => inputHover(e, "mouse-in")} [m
[31m-                            onMouseOut= {(e) => inputHover(e, "mouse-out")} [m
[31m-                            onMouseDown= {inputFocus}[m
[31m-                        > [m
[31m-                            Delete Completed [m
[31m-                        </button>[m
[31m-                        <button [m
[31m-                            className={`empty_btn ${todoList.length > 0 && 'visible'}`} [m
[31m-                            style={{background: styleColors.faintcolor}} [m
[31m-                            onClick ={emptyAll}[m
[31m-                            onMouseOver= {(e) => inputHover(e, "mouse-in")} [m
[31m-                            onMouseOut= {(e) => inputHover(e, "mouse-out")} [m
[31m-                            onMouseDown= {inputFocus}[m
[31m-                        >[m
[31m-                            Empty list [m
[31m-                        </button>[m
[32m+[m[32m                        <button className={`dltcomp_btn ${todoList.length - activeTodos.length > 0 && 'visible'}`} onClick ={deleteComp} style={{background: styleColors.faintcolor}} onMouseOver= {inputHoverStyle} onMouseOut= {mouseOut} onMouseDown= {inputFocusStyle}> Delete Completed </button>[m
[32m+[m[32m                        <button className={`empty_btn ${todoList.length > 0 && 'visible'}`} onClick ={emptyAll}style={{background: styleColors.faintcolor}} onMouseOver= {inputHoverStyle} onMouseOut= {mouseOut} onMouseDown= {inputFocusStyle}> Empty list </button>[m
                     </div>[m
                     }[m
                 </footer>[m
[1mdiff --git a/src/index.css b/src/index.css[m
[1mindex 8b11267..6119ad9 100644[m
[1m--- a/src/index.css[m
[1m+++ b/src/index.css[m
[36m@@ -18,7 +18,6 @@[m [ma {[m
   color: #646cff;[m
   text-decoration: inherit;[m
 }[m
[31m-[m
 a:hover {[m
   color: #535bf2;[m
 }[m
[36m@@ -39,36 +38,31 @@[m [mh1 {[m
 button {[m
   border-radius: 8px;[m
   border: 1px solid transparent;[m
[31m-  font-size: 1rem;[m
[32m+[m[32m  padding: 0.6em 1.2em;[m
[32m+[m[32m  font-size: 1em;[m
   font-weight: 500;[m
   font-family: inherit;[m
   background-color: #1a1a1a;[m
   cursor: pointer;[m
   transition: border-color 0.25s;[m
 }[m
[31m-[m
 button:hover {[m
   border-color: #646cff;[m
 }[m
[31m-[m
 button:focus,[m
 button:focus-visible {[m
   outline: 4px auto -webkit-focus-ring-color;[m
 }[m
 [m
 @media (prefers-color-scheme: light) {[m
[31m-[m
   :root {[m
     color: #213547;[m
     background-color: #ffffff;[m
   }[m
[31m-[m
   a:hover {[m
     color: #747bff;[m
   }[m
[31m-[m
   button {[m
     background-color: #f9f9f9;[m
   }[m
[31m-[m
 }[m
[1mdiff --git a/src/todo.css b/src/todo.css[m
[1mindex 761948e..518ee1d 100644[m
[1m--- a/src/todo.css[m
[1m+++ b/src/todo.css[m
[36m@@ -27,13 +27,12 @@[m
     width: 80vw;[m
     position: relative;[m
     max-height: 90vh;[m
[31m-    height: 90dvh;[m
[32m+[m[32m    height: 90vh;[m
     border-radius: 5px;[m
     display: flex;[m
     flex-direction: column;[m
     align-items: center;[m
     gap: 10px;[m
[31m-    overflow-y: auto;[m
     transition: var(--main-transition);[m
 }[m
 [m
[36m@@ -142,11 +141,9 @@[m
     width: 80%;[m
     position: absolute;[m
     top: 5rem;[m
[31m-    left: 50%;[m
[31m-    transform: translateX(-50%);[m
[32m+[m[32m    left: 3.9rem;[m
     display: flex;[m
[31m-    gap: 0.3rem 4rem;[m
[31m-    align-items: center;[m
[32m+[m[32m    flex-wrap: wrap;[m
     justify-content: space-between;[m
     color: #7e7e7e;[m
     font-size: 0.95rem;[m
[36m@@ -182,7 +179,7 @@[m
     align-items: center;[m
 }[m
 [m
[31m-h3 {[m
[32m+[m[32m.header_content h3 {[m
     font-size: 1.5rem;[m
     font-weight: 600;[m
     text-align: center;[m
[36m@@ -217,7 +214,6 @@[m [mh3 {[m
     font-size: 1.2rem;[m
     font-weight: 500;[m
     font-style: italic;[m
[31m-    max-width: 80%;[m
 }[m
 [m
 .alert {[m
[36m@@ -250,8 +246,6 @@[m [mh3 {[m
     width: var(--content-width);[m
     height: fit-content;[m
     display: flex;[m
[31m-    flex-wrap: wrap;[m
[31m-    gap: 0.5rem;[m
     justify-content: center;[m
     align-items: center;[m
     margin-bottom: 0.7rem;[m
[36m@@ -300,43 +294,36 @@[m [mh3 {[m
 } [m
 [m
 .input_active {[m
[31m-    width: 10rem;[m
[32m+[m[32m    width: 9rem;[m
     opacity: 1;[m
     overflow: visible;[m
 }[m
 [m
 .search_input {[m
[31m-    width: 8rem;[m
[32m+[m[32m    width: inherit;[m
[32m+[m[32m    border-radius: 6px;[m
     opacity: 1;[m
 }[m
 [m
[31m-.search_icon {[m
[31m-    height: 2.2rem;[m
[31m-    place-content: center;[m
[31m-    border-radius: 0 6px 6px 0;[m
[31m-    padding-left: 0.5rem;[m
[31m-    background: white !important;[m
[32m+[m[32m.search_input:focus {[m
[32m+[m[32m    outline: transparent;[m
[32m+[m[32m    border: 1px solid var(--white);[m
 }[m
 [m
 .search_icon svg {[m
[32m+[m[32m    position: absolute;[m
[32m+[m[32m    top: 50%;[m
[32m+[m[32m    right: 5%;[m
[32m+[m[32m    transform: translateY(-50%);[m
     font-size: 0.9rem;[m
     margin-right: 0.5rem;[m
     transition: var(--main-transition);[m
 }[m
 [m
[31m-.input_box:hover, .input_box:focus{[m
[31m-    border: transparent;[m
[31m-    outline: transparent;  [m
[31m-}[m
[31m-[m
 .input_box:hover .search_icon svg{[m
     color: var(--grey);  [m
 }[m
 [m
[31m-.input_box:focus-within .search_icon {[m
[31m-    background: transparent !important; [m
[31m-}[m
[31m-[m
 .active_search {[m
     background: var(--white);[m
 }[m
[36m@@ -352,7 +339,6 @@[m [mh3 {[m
     border-radius: 0 6px 6px 0;[m
     outline: none;[m
     border: none;[m
[31m-    font-size: 1rem;[m
     text-wrap: nowrap;[m
     transition: var(--main-transition);[m
 }[m
[36m@@ -448,15 +434,10 @@[m [mh3 {[m
 .sort_box li:last-child {[m
     border-bottom: none;[m
 }[m
[31m-[m
[31m-.curr_sortType {[m
[31m-    color: var(--sorttype_hov);[m
[31m-}[m
  [m
 .todo_list {[m
     width: var(--content-width);[m
     max-height: 800px;[m
[31m-    min-height: 400px;[m
     background: var(--white);[m
     display: flex;[m
     flex-direction: column;[m
[36m@@ -492,7 +473,7 @@[m [mh3 {[m
 .todo_render {[m
     position: relative;[m
     width: 100%;[m
[31m-    height: 3.1rem;[m
[32m+[m[32m    padding: 0.5rem 0.3rem;[m
     display: flex;[m
     justify-content: space-between;[m
     align-items: center;[m
[36m@@ -501,13 +482,27 @@[m [mh3 {[m
     gap: 1rem;[m
 }[m
 [m
[32m+[m[32m.high_imp {[m
[32m+[m[32m    font-weight: 800;[m
[32m+[m[32m    color: purple;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.avg_imp {[m
[32m+[m[32m    font-weight: 600;[m
[32m+[m[32m    color: rgb(191, 38, 191);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.low_imp {[m
[32m+[m[32m    font-weight: 400;[m
[32m+[m[32m}[m
[32m+[m
 .line {[m
     opacity: 0.3;[m
 }[m
 [m
 .todo_render:hover {[m
     background: linear-gradient(to left, #f9f9f9,rgb(214, 214, 214));[m
[31m-    padding-left: 0.3rem;[m
[32m+[m[32m    padding-left: 6px;[m
     border-left: 1px solid rgb(173, 173, 173);[m
 }[m
 [m
[36m@@ -540,36 +535,6 @@[m [mh3 {[m
     transition: all 300ms ease-out;[m
 }[m
 [m
[31m-.tools_extension {[m
[31m-    display: flex;[m
[31m-    flex-direction: column;[m
[31m-    align-items: end;[m
[31m-    position: absolute;[m
[31m-    top: 0.5rem;[m
[31m-    right: 0;[m
[31m-    /* padding-right: 0.25rem; */[m
[31m-}[m
[31m-[m
[31m-.dots_btn {[m
[31m-    background: transparent;[m
[31m-    transform: rotate(90deg);[m
[31m-    height: 2rem;[m
[31m-    width: 2rem;[m
[31m-    padding: 0;[m
[31m-    margin: 0;[m
[31m-    text-align: center;[m
[31m-    display: none;[m
[31m-    border: none;[m
[31m-    outline: none;[m
[31m-    align-items: center;[m
[31m-    justify-content: center;[m
[31m-}[m
[31m-[m
[31m-.dots_btn:hover {[m
[31m-    background: #e5e5e5;[m
[31m-}[m
[31m-[m
[31m-[m
 .todo_tagname:hover .alarmtime_away {[m
     opacity: 0;[m
 }[m
[36m@@ -655,7 +620,6 @@[m [mh3 {[m
 }[m
 [m
 .todo_btns {[m
[31m-    position: relative;[m
     width: fit-content;[m
     height: 100%;[m
     padding: 0 0.3rem;[m
[36m@@ -667,18 +631,16 @@[m [mh3 {[m
 [m
 .alarm_box {[m
     position: absolute;[m
[31m-    right: 0.5rem;[m
[32m+[m[32m    right: 0.3rem;[m
     width: fit-content;[m
[31m-    height: 2.2rem;[m
[32m+[m[32m    height: 2rem;[m
     display:  flex;[m
     align-items: center;[m
[31m-    flex-wrap: wrap;[m
     gap: 1rem;[m
     padding: 0.1rem 0.5rem;[m
     background: rgb(214, 214, 214);[m
     visibility: hidden;[m
     opacity: 0;[m
[31m-    z-index: 20;[m
     transition: var(--main-transition);[m
 }[m
 [m
[36m@@ -691,9 +653,9 @@[m [mh3 {[m
 .alarm_box .close_btn {[m
     position: absolute;[m
     top: 0;[m
[31m-    right: 0; [m
[32m+[m[32m    left: 0;[m
     background: transparent;[m
[31m-    padding: 0.2rem;[m
[32m+[m[32m    padding: 0;[m
     color: rgb(163, 163, 163);[m
     border: none;[m
     outline: none;[m
[36m@@ -721,7 +683,7 @@[m [mh3 {[m
     border: none;[m
     outline: none;[m
     width: 5.7rem;[m
[31m-    /* margin-left: 1rem; */[m
[32m+[m[32m    margin-left: 1rem;[m
 }[m
 [m
 .alarmactive_time {[m
[36m@@ -733,7 +695,7 @@[m [mh3 {[m
     background: rgb(124, 124, 124);[m
     border: none;[m
     outline: none;[m
[31m-    padding: 0.15rem 0.6rem;[m
[32m+[m[32m    padding: 0.1rem 0.6rem;[m
     color: white;[m
     font-weight: 400;[m
     font-size: 0.9rem;[m
[36m@@ -742,7 +704,6 @@[m [mh3 {[m
     text-align: center;[m
     border-radius: 5px; [m
     opacity: 0.8;[m
[31m-    margin-right: 1rem;[m
 }[m
 [m
 .alarmset:hover {[m
[36m@@ -779,7 +740,6 @@[m [minput[type = 'range'] {[m
     border-radius: 5px;[m
     outline: none;[m
     border: none;[m
[31m-    cursor: pointer;[m
     transition: var(--main-transition);[m
 }[m
 [m
[36m@@ -809,7 +769,6 @@[m [minput[type='range']::-webkit-slider-thumb:hover {[m
 }[m
 [m
 .tool_btn {[m
[31m-    position: relative;[m
     padding: 0.3rem 0.4rem;[m
     background: none;[m
     z-index: 2;[m
[36m@@ -825,25 +784,6 @@[m [minput[type='range']::-webkit-slider-thumb:hover {[m
     border: transparent;[m
 }[m
 [m
[31m-/* .tool_btn:hover .tool_label{[m
[31m-    opacity: 1;[m
[31m-} */[m
[31m-[m
[31m-.tool_label {[m
[31m-    /* position: absolute; */[m
[31m-    /* left: 0; */[m
[31m-    display: none;[m
[31m-    color: #595959;[m
[31m-    font-size: 0.8rem;[m
[31m-    width: 2.5rem;[m
[31m-    text-align: start;[m
[31m-    /* opacity: 0; */[m
[31m-}[m
[31m-[m
[31m-.show_label {[m
[31m-    opacity: 1;[m
[31m-}[m
[31m-[m
 .trash,[m
 .edit {[m
     color:var(--dim_name);[m
[36m@@ -863,12 +803,11 @@[m [minput[type='range']::-webkit-slider-thumb:hover {[m
     color: green;[m
 }[m
 [m
[31m-.todo_btns .todo_btn:hover .trash, .todo_btns .todo_btn:hover .edit,[m
 .trash:hover,[m
 .trash:focus,[m
 .edit:hover,[m
 .edit:focus {[m
[31m-    fill: var(--grey);[m
[32m+[m[32m    color: var(--grey);[m
 }[m
 [m
 footer {[m
[36m@@ -934,107 +873,6 @@[m [mfooter {[m
 [m
     .time_date {[m
         width: 63.5%;[m
[31m-        /* left: 18%; */[m
[31m-        left: 50%;[m
[31m-        transform: translateX(-50%);[m
[32m+[m[32m        left: 18%;[m
     }[m
 }[m
[31m-[m
[31m-[m
[31m-@media screen and (max-width: 650px) {[m
[31m-    h3 {[m
[31m-        font-size: 1.25rem;[m
[31m-    }[m
[31m-    [m
[31m-    .note {[m
[31m-        font-size: 1.05rem;[m
[31m-        margin-bottom: 0.2rem;[m
[31m-    }[m
[31m-[m
[31m-    .tool_btn {[m
[31m-        width: 100%;[m
[31m-        display: flex;[m
[31m-        justify-content: space-between;[m
[31m-        align-items: center;[m
[31m-        opacity: 0;[m
[31m-        visibility: hidden;[m
[31m-        pointer-events: none;[m
[31m-        transition: all 300ms ease-in;[m
[31m-    }[m
[31m-[m
[31m-    .todo_btns .tool_btn:hover {[m
[31m-        background: #f8f8f8;[m
[31m-    }[m
[31m-[m
[31m-    .todo_btns {[m
[31m-        margin-top: 0.8rem;[m
[31m-        flex-direction: column;[m
[31m-        background: linear-gradient(#ededed, #e2e2e2);[m
[31m-        opacity: 0;[m
[31m-        padding: 0.2rem;[m
[31m-        z-index: 2;[m
[31m-        visibility: hidden;[m
[31m-        pointer-events: none;[m
[31m-        transition: all 500ms ease-in;[m
[31m-    }[m
[31m-[m
[31m-    .todo_render:hover .tools_extension {[m
[31m-        opacity: 1;[m
[31m-    }[m
[31m-[m
[31m-    .dots_btn {[m
[31m-        display: flex;[m
[31m-    }[m
[31m-[m
[31m-    .tool_btn-show {[m
[31m-        opacity: 1;[m
[31m-        visibility: visible;[m
[31m-        pointer-events: all;[m
[31m-    }[m
[31m-[m
[31m-    .tool_label {[m
[31m-        display: flex;[m
[31m-    }[m
[31m-    [m
[31m-    .dropdown {[m
[31m-        opacity: 1;[m
[31m-        margin-top: -0.3rem;[m
[31m-        z-index: 10;[m
[31m-        pointer-events: all;[m
[31m-        visibility: visible;[m
[31m-    }[m
[31m-[m
[31m-    .input_forms {[m
[31m-        /* justify-content: center; */[m
[31m-    }[m
[31m-[m
[31m-    .add_input {[m
[31m-        width: 8rem;[m
[31m-        font-size: 0.83rem;[m
[31m-    }[m
[31m-[m
[31m-    .add_btn {[m
[31m-        padding: 0 0.8rem;[m
[31m-        font-size: 0.9rem;[m
[31m-    }[m
[31m-[m
[31m-    .note {[m
[31m-        margin-top: 0.8rem;[m
[31m-        margin-bottom: 0.3rem;[m
[31m-    }[m
[31m-[m
[31m-    .search_input {[m
[31m-        width: 6.5rem;[m
[31m-    }[m
[31m-[m
[31m-    .input_box {[m
[31m-        width: 1.9rem;[m
[31m-        overflow: hidden;[m
[31m-        background: transparent;[m
[31m-    }[m
[31m-[m
[31m-    .input_box-extend {[m
[31m-        width: 8.5rem;[m
[31m-        background: transparent;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/src/todoEntry.jsx b/src/todoEntry.jsx[m
[1mindex aaa69a0..8c254e1 100644[m
[1m--- a/src/todoEntry.jsx[m
[1m+++ b/src/todoEntry.jsx[m
[36m@@ -1,15 +1,13 @@[m
 import React, {useState, useEffect} from 'react';[m
[31m-import {FaEdit, FaTrash, FaClock, FaTimes, FaAngleDown} from 'react-icons/fa';[m
[32m+[m[32mimport {FaEdit, FaTrash, FaClock, FaTimes} from 'react-icons/fa';[m
 import { Temporal } from 'temporal-polyfill';[m
 [m
 [m
[31m-const todoEntry = ({todo, toggleCheck, deleteTodo, editTodo, changeRange, saveTodoAlarm, toggleAlarmBox, changeAlarmTime, alarmTime, handleExpiredAlarm, todoTagRef, alarmConsolesRef, alarmBoxOpen, setAlarmBoxOpen, removeAlarmBox}) => {[m
[32m+[m[32mconst todoEntry = ({todo, toggleCheck, deleteTodo, editTodo, changeRange, saveTodoAlarm, toggleAlarmBox, changeAlarmTime, alarmTime, addressExpiredAlarm}) => {[m
     const [alarmTimeAway, setAlarmTimeAway] = useState('');[m
     const [alarmNotif, setAlarmNotif] = useState(false);[m
[31m-    const [todoToolsDropdown, setTodoToolsDropdown] = useState(false);[m
[31m-    // const [toolLabel, setToolLabel] = useState('');[m
 [m
[31m-    const {name, id, complete, order, alarm, index} = todo;[m
[32m+[m[32m    const {name, id, complete, order, alarm} = todo;[m
 [m
     const activeAlarm = alarm && alarm.active === true;[m
 [m
[36m@@ -49,6 +47,8 @@[m [mconst todoEntry = ({todo, toggleCheck, deleteTodo, editTodo, changeRange, saveTo[m
 [m
                 const timeAwayString = timeAway.round('second').toString().replace('PT', '').replace('H', 'H ').toLowerCase();[m
 [m
[32m+[m[32m                console.log(timeAwayString)[m
[32m+[m
                 // if(timeAwayString === 'p1d') {[m
                     [m
                 // }[m
[36m@@ -63,7 +63,7 @@[m [mconst todoEntry = ({todo, toggleCheck, deleteTodo, editTodo, changeRange, saveTo[m
 [m
     useEffect(()=> {[m
         alarm.expired ? setAlarmNotif(true) : setAlarmNotif(false);[m
[31m-    }, [alarm, handleExpiredAlarm])[m
[32m+[m[32m    }, [alarm, addressExpiredAlarm])[m
 [m
     useEffect(()=> {[m
         activeAlarm && setAlarmNotif(false);[m
[36m@@ -72,7 +72,7 @@[m [mconst todoEntry = ({todo, toggleCheck, deleteTodo, editTodo, changeRange, saveTo[m
     //Notification toggling[m
     const rmNotificatn = (e, id)=> {[m
         if(alarmNotif) {[m
[31m-            return handleExpiredAlarm(id);[m
[32m+[m[32m            return addressExpiredAlarm(id);[m
         }[m
         const alarmAway = e.currentTarget.parentElement;[m
         alarmAway.style.opacity = '0';[m
[36m@@ -87,22 +87,16 @@[m [mconst todoEntry = ({todo, toggleCheck, deleteTodo, editTodo, changeRange, saveTo[m
         }[m
     }[m
 [m
[31m-    // const showLabel = (e) => {[m
[31m-    //     setTimeout(() => {[m
[31m-    //         setToolLabel(e.target.value);[m
[31m-    //     }, 500);[m
[31m-    // }[m
[31m-[m
     const alarmNotRmv = activeAlarm || alarmNotif === true;[m
[31m-    // console.[m
[32m+[m
   return ([m
         <section key={id} className='todo_wrapper'>[m
[31m-            <div className= 'todo_render'>[m
[31m-                <article onMouseOver={()=>removeAlarmBox('close')} className= {`todo_tagname ${activeAlarm && 'shrink'}`}>[m
[31m-                    <input className ='todo_check' type='checkbox' id = {id} checked= {complete} onChange ={()=> {toggleCheck(id, index)}}/>[m
[31m-                    <label className= {`todo_item ${complete && 'dim'} `} onMouseOver={remTimeAway} onMouseLeave={addTimeAway} ref={(el) => (todoTagRef.current[index] = el)}>{name}</label>[m
[32m+[m[32m            <div className= 'todo_render' >[m
[32m+[m[32m                <article onMouseOver={(e)=>  toggleAlarmBox (e, 'close')} className= {`todo_tagname ${activeAlarm && 'shrink'}`}>[m
[32m+[m[32m                    <input className ='todo_check' type='checkbox' id = {id} checked= {complete} onChange ={(e)=> {toggleCheck(e, id)}}/>[m
[32m+[m[32m                    <label className= {`todo_item ${complete && 'dim'} `} onMouseOver={remTimeAway} onMouseLeave={addTimeAway}>{name}</label>[m
                 </article> [m
[31m-                <div className='alarmtime_away' onMouseOver={()=> removeAlarmBox('close')}> [m
[32m+[m[32m                <div className='alarmtime_away'>[m[41m [m
                     <span className='notif_content'>[m
                         <p className = {`notificatn_text ${alarmNotif && 'timeout'}`}> [m
                         {activeAlarm && alarmTimeAway}[m
[36m@@ -113,50 +107,24 @@[m [mconst todoEntry = ({todo, toggleCheck, deleteTodo, editTodo, changeRange, saveTo[m
                         </button> [m
                     </span>[m
                 </div>[m
[31m-                <div className="tools_extension">[m
[31m-                    <button className='dots_btn' onMouseOver={()=> setTodoToolsDropdown(true)} onMouseOut={()=> setTodoToolsDropdown(false)}>...</button>[m
[31m-[m
[31m-                    <div className={`todo_btns ${todoToolsDropdown && 'dropdown'}`} onMouseOver={()=> {[m
[31m-                        setTodoToolsDropdown(true);[m
[31m-                        removeAlarmBox('close')[m
[31m-                    }} onMouseOut={()=> setTodoToolsDropdown(false)}>[m
[31m-                        {!complete && <button className={todoToolsDropdown ? 'tool_btn tool_btn-show' : "tool_btn"} onClick={()=>{editTodo(id)}}> [m
[31m-                            <FaEdit className='edit'/> [m
[31m-                            <span className='tool_label'>edit</span>[m
[31m-                        </button>}[m
[31m-                        {!complete && <button className={todoToolsDropdown ? 'tool_btn tool_btn-show' : "tool_btn"} id = {id} onClick={(e)=> {[m
[31m-                            toggleAlarmBox('open', e);[m
[31m-                            setAlarmBoxOpen(true);[m
[31m-                            setTodoToolsDropdown(false);[m
[31m-                        }}> [m
[31m-                            <FaClock className= {`edit ${(activeAlarm) && 'active_alarm'} `}/> [m
[31m-                            <span className='tool_label'>alarm</span>[m
[31m-                        </button>}[m
[31m-                        {!complete && <button className={todoToolsDropdown ? 'tool_btn imp_range tool_btn-show' : "tool_btn imp_range"}>[m
[31m-                            <input  type='range' value={order} className= 'order_range' onChange={(e)=>changeRange(e, id, index)}/>[m
[31m-                            <span className='tool_label'>order</span>[m
[31m-                        </button>}[m
[31m-                        <button className={todoToolsDropdown ? 'tool_btn tool_btn-show' : "tool_btn"} onClick={()=>{deleteTodo(id)}}>[m
[31m-                            <FaTrash className='trash'/>[m
[31m-                            <span className='tool_label'>delete</span>[m
[31m-                        </button> [m
[31m-                    </div> [m
[31m-                    <div className="alarm_box" id={id} ref={(el) => (alarmConsolesRef.current[index] = el)}>[m
[31m-                        <button className="close_btn" id = {id} onClick={(e)=> {[m
[31m-                            toggleAlarmBox('close', e);[m
[31m-                            setAlarmBoxOpen(false);[m
[31m-                        }}>[m
[31m-                            <FaTimes/>[m
[31m-                        </button>[m
[32m+[m[32m                <div className='todo_btns'>[m
[32m+[m[32m                    {!complete && <button className='tool_btn' onClick={()=>{editTodo(id)}}> <FaEdit className='edit'/></button>}[m
[32m+[m[32m                    {!complete && <button className='tool_btn' id = {id} onClick={(e)=> toggleAlarmBox(e, 'open')}> <FaClock className= {`edit ${(activeAlarm) && 'active_alarm'} `}/></button>}[m
[32m+[m[32m                    {!complete && <button className='tool_btn imp_range'>[m
[32m+[m[32m                        <input  type='range' value={order} className= 'order_range' onChange={(e)=>changeRange(e, id)}/>[m
[32m+[m[32m                    </button>}[m
[32m+[m[32m                    <button className= 'tool_btn' onClick={()=>{deleteTodo(id)}}><FaTrash className='trash'/></button>[m[41m [m
[32m+[m[32m                    <div className="alarm_box" id={id}>[m
[32m+[m[32m                        <button className="close_btn" id = {id} onClick={(e)=> toggleAlarmBox(e, 'close')}><FaTimes/></button>[m
                         <form className='alarm_form' onSubmit={(e)=> saveTodoAlarm(e, id)}>[m
                             {(activeAlarm) ? <label className='alarmactive_time'>{alarm && alarm.time}</label> :[m
                             <input type='time' id = {id} value ={(alarm && alarm.time)} onChange={changeAlarmTime}/>}[m
                             <button type ='submit' className={`alarm_set ${(activeAlarm) && 'cancel_style'}`} id= {id}>{activeAlarm ? 'cancel' : 'set'} </button>[m
                         </form>[m
                     </div>[m
[31m-                </div> [m
[32m+[m[32m                </div>[m[41m  [m
             </div>[m
[31m-            <hr className='line' onMouseOver={()=>removeAlarmBox('close')}></hr>[m
[32m+[m[32m            <hr className='line' onMouseOver={(e)=>  toggleAlarmBox (e, 'close')}></hr>[m
         </section>[m
     );[m
 }[m
[1mdiff --git a/src/useTodo.jsx b/src/useTodo.jsx[m
[1mindex 91a6416..8de03ad 100644[m
[1m--- a/src/useTodo.jsx[m
[1m+++ b/src/useTodo.jsx[m
[36m@@ -18,19 +18,12 @@[m [mconst useTodo = () => {[m
     [m
     //UI elements[m
     const [todoRender, setTodoRender] = useState([]);[m
[31m-    const TodaysDate = new Date().toLocaleDateString([], {[m
[31m-        day: "2-digit", [m
[31m-        weekday:'short',[m
[31m-        month: window.innerWidth > 650 ? 'long' : 'short', [m
[31m-    })[m
[31m-    const [date, setDate] = useState(TodaysDate)[m
[32m+[m[32m    const TodaysDate = new Date().toLocaleDateString([], {dateStyle:'full'})[m
[32m+[m[32m    const [date, setDate] = useState(TodaysDate.replace(TodaysDate.slice(-4)).endsWith(',') ? TodaysDate.replace(TodaysDate.slice(-6)) : TodaysDate.replace(TodaysDate.slice(-5), ''))[m
     const [time, setTime] = useState('');[m
     const [openSettings, setOpenSettings] = useState(false);[m
     const settingsBtn = useRef(null);[m
     const inputRef = useRef(null);[m
[31m-    const sortUlRef = useRef(null);[m
[31m-    const todoTagRef = useRef([]);[m
[31m-    const alarmConsolesRef = useRef([]);[m
     const todoRenderRef = useRef(null);[m
     const [searchFound, setSearchFound] = useState('');[m
     const [footerBtns, setFooterBtns] = useState(true);[m
[36m@@ -56,49 +49,53 @@[m [mconst useTodo = () => {[m
             setBaseThemeColor(e.target.value);[m
             setEffectChange(true);[m
         }[m
[31m-        [m
[31m-        const elClass = (e, checkClass) => e.target.className.includes(checkClass);[m
[31m-        const elStyle = e => e.target.style[m
[31m-[m
[31m-        const inputHover = (e, type) => {[m
[31m-[m
[31m-            const elStyle_ = elStyle(e);[m
 [m
[31m-            if(elClass(e, 'sort_type')) {[m
[31m-                elStyle_.color = styleColors.sorttypehov;[m
[31m-            }else if (elClass(e, 'dltcomp_btn') || elClass(e, 'empty_btn')) {[m
[31m-                type === 'mouse-in' ? [m
[31m-                    elStyle_.background = styleColors.opacitycolor : [m
[31m-                    elStyle_.background = styleColors.faintcolor;[m
[32m+[m[32m        const inputHoverStyle = (e)=> {[m
[32m+[m[32m            if(e.target.className.includes('sort_type')) {[m
[32m+[m[32m                e.target.style.color = styleColors.sorttypehov;[m
[32m+[m[32m            }else if (e.target.className.includes('dltcomp_btn') || e.target.className.includes('empty_btn')) {[m
[32m+[m[32m                e.target.style.background = styleColors.opacitycolor[m
[32m+[m[32m            }else {[m
[32m+[m[32m                e.target.style.border = `1px solid ${styleColors.inputbordercolor}`[m[41m [m
             }[m
[31m-            else {[m
[31m-                type === 'mouse-in' ? [m
[31m-                    elStyle_.border = `1px solid ${styleColors.inputbordercolor}`: [m
[31m-                    e.target.style = {border:`transparent`, background: `white`};[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        const inputFocusStyle = (e)=> {[m
[32m+[m[32m            if(e.target.className.includes('sort_type')) {[m
[32m+[m[32m                e.target.style.color = styleColors.sorttypehov;[m
[32m+[m[32m            }else if(e.target.className.includes('add_input')){[m
[32m+[m[32m                e.target.style.border = `1px solid white`[m
[32m+[m[32m                e.target.style.background = styleColors.faintcolor;[m
[32m+[m[32m            }else if(e.target.className.includes('search_input')){[m
[32m+[m[32m                e.target.style.background = styleColors.faintcolor;[m
[32m+[m[32m                e.target.style.border = `1px solid white`;[m
             }[m
         }[m
 [m
[31m-        const inputFocus = (e)=> {[m
[31m-            const elStyle_ = elStyle(e);[m
[31m-            if(elClass(e, 'sort_type')) {[m
[31m-                elStyle_.color = styleColors.sorttypehov;[m
[31m-            }else if(elClass(e, 'add_input') || elClass(e, 'search_input')){[m
[31m-                elStyle_.border = `1px solid white`[m
[31m-                elStyle_.background = styleColors.faintcolor;[m
[32m+[m[32m        const mouseOut = (e)=> {[m
[32m+[m[32m            if(e.target.className.includes('sort_type')) {[m
[32m+[m[32m                e.target.style.color = styleColors.sortsetthov;[m
[32m+[m[32m            }else if (e.target.className.includes('dltcomp_btn') || e.target.className.includes('empty_btn')) {[m
[32m+[m[32m                e.target.style.background = styleColors.faintcolor[m
[32m+[m[32m            }else {[m
[32m+[m[32m            e.target.style.border = `transparent`;[m
[32m+[m[32m            e.target.style.background = `white`;[m
             }[m
         }[m
 [m
         const sortBoxMouseOut = (e)=> {[m
[31m-            const elStyle_ = elStyle(e)[m
[31m-            elStyle_.color = 'grey';[m
[32m+[m[32m            e.target.style.color = 'grey';[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        const addBtnHover = (e)=> {[m
[32m+[m[32m            e.target.style.background = styleColors.opacitycolor;[m
         }[m
 [m
[31m-        const addBtnHover = (e, type)=> {[m
[31m-            const elStyle_ = elStyle(e);[m
[31m-            type === "mouse-in" ? elStyle_.background = styleColors.opacitycolor : elStyle_.background = styleColors.faintcolor;[m
[32m+[m[32m        const rmAddBtnHover = (e)=> {[m
[32m+[m[32m            e.target.style.background = styleColors.faintcolor;[m
         }[m
 [m
[31m-        return {changeThemeColor, handleColorChange, inputHover, inputFocus, sortBoxMouseOut, addBtnHover}[m
[32m+[m[32m        return {changeThemeColor, handleColorChange,inputHoverStyle, inputFocusStyle, mouseOut, sortBoxMouseOut, addBtnHover, rmAddBtnHover}[m
     }[m
 [m
     function todoToolsControls () {[m
[36m@@ -106,9 +103,8 @@[m [mconst useTodo = () => {[m
                 setAlert({display, msg, comment})[m
         }[m
     [m
[31m-        const addTodo =(e)=> {[m
[31m-            e.preventDefault(); [m
[31m-            console.log("added");[m
[32m+[m[32m        const addTodo =(event)=> {[m
[32m+[m[32m            event.preventDefault();[m[41m [m
             const tagName = inputRef.current.value;[m
             if(!tagName) {[m
                 alertControl(true, 'pls enter some value', 'fail')[m
[36m@@ -132,17 +128,19 @@[m [mconst useTodo = () => {[m
             inputRef.current.focus();[m
         }[m
     [m
[31m-        const toggleCheck = (id, i)=> {[m
[32m+[m[32m        const toggleCheck = (e, id)=> {[m
             const todos = [...todoList];[m
             let toggledTodo = todos.find(todo=> todo.id === id);[m
             toggledTodo= {...toggledTodo, complete:!toggledTodo.complete};[m
     [m
             const filtTodos = todos.filter(todo => {return todo.id !==id})[m
[31m-            todoTagRef.current[i].style.fontWeight = '400';[m
[32m+[m[32m            e.target.nextSibling.style.fontWeight = '400';[m
             if (toggledTodo.complete) {[m
                 setTodoList(()=> {return [...filtTodos, toggledTodo]})[m
[32m+[m[32m                // sortTypeEffect(activeSortType, todoList)[m
             } else {[m
                 setTodoList(()=> {return sortTypeEffect(activeSortType, [toggledTodo, ...filtTodos])})[m
[32m+[m[32m                // sortTypeEffect(activeSortType, todoRender)[m
             } [m
         }[m
 [m
[36m@@ -158,8 +156,8 @@[m [mconst useTodo = () => {[m
             alertControl(true, 'A todo item removed', 'success')[m
         }[m
     [m
[31m-        const changeRange=(e, id, i)=> {[m
[31m-            const tagNameStyle = todoTagRef.current[i].style;[m
[32m+[m[32m        const changeRange=(e, id)=> {[m
[32m+[m[32m            const todo_render = e.target.parentElement.parentElement.parentElement.children[0].children[1];[m
             let range; [m
             // debugger[m
             const orderedList= todoList.map((todo)=> {[m
[36m@@ -167,9 +165,9 @@[m [mconst useTodo = () => {[m
                     todo.order = parseInt(e.target.value)[m
                     if(todo.order > 0) {[m
                         range = Math.ceil(todo.order/10)[m
[31m-                       tagNameStyle.fontWeight = (range * 50) + 400; [m
[32m+[m[32m                        todo_render.style.fontWeight = (range * 50) + 400;[m[41m [m
                     }else {[m
[31m-                        tagNameStyle.fontWeight = '400'[m
[32m+[m[32m                        todo_render.style.fontWeight = '400'[m
                     }[m
                     return todo;[m
                 }[m
[36m@@ -179,15 +177,18 @@[m [mconst useTodo = () => {[m
         }[m
 [m
         const todoOrderStyles = (todos)=> {[m
[31m-            const todoLabel = todoTagRef.current || [][m
[32m+[m[32m            const todosEl= Array.from(todoRenderRef.current.children)[m
[32m+[m[41m            [m
[32m+[m[32m            const todoLabel = todosEl.map((el)=> {[m
[32m+[m[32m            return el.children[0].children[0].children[0].children[1];[m
[32m+[m[32m            })[m
 [m
             todos.map((todo)=> {[m
[31m-                todoLabel?.find((lab)=> {[m
[31m-                    if (lab.innerText && lab.innerText === todo.name && !todo.complete){[m
[32m+[m[32m                todoLabel.find((lab)=> {[m
[32m+[m[32m                    if (lab.innerText === todo.name && !todo.complete){[m
                         const fontweight = ((todo.order)/10 * 50) + 400;   [m
                         lab.style.fontWeight = `${fontweight}`; [m
                     }[m
[31m-                    return;[m
                 })[m
             })[m
         }[m
[36m@@ -240,17 +241,16 @@[m [mconst useTodo = () => {[m
         const chooseSortType = (e, id)=> {[m
             const sortType = e.target.innerText;[m
             setActiveSortType(sortType);[m
[31m-            const sortList = sortUlRef.current.children;[m
[31m-            console.log(sortList);[m
[31m-            Array.from(sortList).forEach((child)=> {[m
[32m+[m[32m            const lis = e.target.parentElement.parentElement.children;[m
[32m+[m[32m            Array.from(lis).forEach((child)=> {[m
                 child.style.borderLeft = 'none';[m
[31m-                Array.from(child.children).forEach((each)=> {[m
[31m-                    each.classList.remove('curr_sortType');[m
[32m+[m[32m                Array.from (child.children).forEach((each)=> {[m
[32m+[m[32m                    each.classList.remove ('curr_sortType');[m
                 })[m
             })[m
             if (sortType === id) {[m
[31m-                e.target.style.color = `${styleColors.midcolor} !important`;[m
[31m-                e.target.parentElement.style.borderLeft = `3px solid ${styleColors.midcolor}`;[m
[32m+[m[32m                e.target.classList.add('curr_sortType');[m
[32m+[m[32m                e.target.parentElement.style.borderLeft = '2px solid rgba(141, 24, 139, 0.7)';[m
             }[m
         [m
             setSortBox(false);[m
[36m@@ -259,14 +259,16 @@[m [mconst useTodo = () => {[m
         }[m
 [m
         const sortTypeEffect = (type, todos = [...todoRender])=> {[m
[31m-[m
[31m-            let reorderedTodos = [...todos.sort((a, b)=>{[m
[31m-                if(type === 'Todo imp.') return b.order - a.order;[m
[31m-                if(type === 'Alp order') return a.name.localeCompare(b.name);[m
[31m-                if (type === 'Time added') return b.id - a.id;[m
[31m-                if (type === 'Alarm time') return a.alarm.time.localeCompare(b.alarm.time);[m
[31m-            }).sort((a,b)=> a.complete - b.complete)];[m
[31m-    [m
[32m+[m[32m            let reorderedTodos;[m
[32m+[m[32m            if(type === 'Todo imp.') {[m
[32m+[m[32m                reorderedTodos= [...todos.sort((a, b)=> b.order - a.order).sort((a,b)=> a.complete - b.complete)][m
[32m+[m[32m            }else if(type === 'Alp order') {[m
[32m+[m[32m                reorderedTodos= [...todos.sort((a,b)=> a.name.localeCompare(b.name)).sort((a,b)=> a.complete - b.complete)][m
[32m+[m[32m            }else if (type === 'Time added') {[m
[32m+[m[32m                reorderedTodos= [...todos.sort((a,b)=> b.id - a.id).sort((a,b)=> a.complete - b.complete)][m
[32m+[m[32m            }else if (type === 'Alarm time') {[m
[32m+[m[32m                reorderedTodos= [...todos.sort((a,b)=> a.alarm.active - b.alarm.active).sort((a,b)=> a.alarm.time.localeCompare(b.alarm.time)).sort((a,b)=> a.complete - b.complete)][m
[32m+[m[32m            }[m
             return reorderedTodos[m
         }[m
 [m
[36m@@ -274,19 +276,30 @@[m [mconst useTodo = () => {[m
     }[m
 [m
     function todoAlarmControls () {[m
[31m-        const toggleAlarmBox = (type, e = undefined)=> {[m
[31m-            console.log(type);[m
[31m-            const alarmConsoles = alarmConsolesRef.current || [];[m
[32m+[m[32m        const toggleAlarmBox = (e, type)=> {[m
[32m+[m[32m            const todoRenderUI = todoRenderRef.current.childNodes;[m
[32m+[m[32m            const alarmConsoles = Array.from(todoRenderUI).map((comp)=> {[m
[32m+[m[32m                let result;[m
[32m+[m[32m                Array.from(comp.childNodes).map((child)=> {[m
[32m+[m[32m                    result = child.childNodes[0].childNodes[2].childNodes[4];[m
[32m+[m[32m                })[m
[32m+[m[32m                return result;[m
[32m+[m[32m            });[m
 [m
[31m-            if(e === undefined) {[m
[31m-                return type === 'close' && [m
[31m-                alarmConsoles.map(consol => consol.classList.remove('show_alarmbox'));[m
[31m-            }[m
[32m+[m[32m            const consolles = alarmConsoles.filter((consol)=> {[m
[32m+[m[32m                if(consol !== 'undefined') {[m
[32m+[m[32m                    return consol;[m
[32m+[m[32m                }[m
[32m+[m[32m            });[m
 [m
[31m-            return alarmConsoles.map((consol)=> {[m
[31m-                if(consol.id === e.currentTarget?.id && type ==='open') {[m
[32m+[m[32m            return consolles.map((consol)=> {[m
[32m+[m[32m                if(consol.id === e.currentTarget.id && type ==='open') {[m
                     consol.classList.add('show_alarmbox'); [m
[31m-                }else {[m
[32m+[m[32m                }else if (consol.id !== e.currentTarget.id && consol.classList.value.includes('show_alarmbox')){[m
[32m+[m[32m                    consol.classList.remove('show_alarmbox');[m
[32m+[m[32m                }else if (consol.id === e.currentTarget.id && type === 'close') {[m
[32m+[m[32m                    consol.classList.remove('show_alarmbox');[m
[32m+[m[32m                }else if (consol.id !== e.currentTarget.id && type === 'close'){[m
                     consol.classList.remove('show_alarmbox');[m
                 }[m
                 return consol;[m
[36m@@ -301,7 +314,7 @@[m [mconst useTodo = () => {[m
             }[m
             return todo;[m
            })[m
[31m-           setTodoList(todoAlarmTimeEdit);[m
[32m+[m[32m           setTodoList(todoAlarmTimeEdit);[m[41m   [m
         }[m
 [m
         const saveTodoAlarm = (e, id)=> {[m
[36m@@ -350,7 +363,7 @@[m [mconst useTodo = () => {[m
             timeNow === 'true' && timeForTodo(timeNow, todoAlarmExecutedList);[m
         }[m
         [m
[31m-        const handleExpiredAlarm = (id)=> {[m
[32m+[m[32m        const addressExpiredAlarm = (id)=> {[m
             const todoList_ = [...todoList];[m
             const addressedList = todoList_.map((todo)=> {[m
                 if (todo.id === id) {[m
[36m@@ -363,7 +376,7 @@[m [mconst useTodo = () => {[m
             // setTodoList(addressedList);[m
         }[m
 [m
[31m-        return {toggleAlarmBox, changeAlarmTime, saveTodoAlarm, checkAlarm, handleExpiredAlarm};[m
[32m+[m[32m        return {toggleAlarmBox, changeAlarmTime, saveTodoAlarm, checkAlarm, addressExpiredAlarm};[m
     }[m
 [m
     const {addTodo, alertControl, todoOrderStyles} = todoToolsControls()[m
[36m@@ -463,7 +476,7 @@[m [mconst useTodo = () => {[m
         return ()=> clearInterval(alertTimer);[m
     },[todoList, addTodo])[m
 [m
[31m-    return {colors, date, time, alarmTime, setColors, baseThemeColor, setBaseThemeColor, styleColors, colorVar, todoList, sortTypes, activeSortType, sortBox, setSortBox, sortUlRef, effectChange, setEffectChange, openSettings, setOpenSettings, settingsBtn, todoRender, inputRef, todoRenderRef, alert, editing, footerBtns, searchFound, todoToolsControls, sortTodoControls, todoAlarmControls, themeHandler, todoTagRef, alarmConsolesRef}[m
[32m+[m[32m    return {colors, date, time, alarmTime, setColors, baseThemeColor, setBaseThemeColor, styleColors, colorVar, todoList, sortTypes, activeSortType, sortBox, setSortBox, effectChange, setEffectChange,openSettings, setOpenSettings, settingsBtn, todoRender, inputRef, todoRenderRef, alert, editing, footerBtns, searchFound, todoToolsControls, sortTodoControls, todoAlarmControls, themeHandler}[m
 }[m
 [m
 export default useTodo;[m
\ No newline at end of file[m
